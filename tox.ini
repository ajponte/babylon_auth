# tox.ini
# Tox configuration for a Poetry-managed project
[tox]
min_version = 4.0
env_list = py313, pytest, lint, format, typecheck, dist

# ---
# Base configuration for all test environments
[testenv]
description = Setup tox project
isolated_build = True

# ---
# Python 3.13 environment
[testenv:py313]
base_python = python3.13
deps =
    -e .

# ---
# Run pytest on the project
[testenv:pytest]
description = Run pytest for the project
deps =
    -e .
    pytest
commands =
    pytest auth_server/tests
allowlist_externals =
    pytest

# ---
# Linting (tests excluded) - use find+xargs to exclude any file under */tests/*
[testenv:lint]
description = Run pylint excluding test files
deps =
    pylint
    hvac
# Use find to list .py files under auth_server but exclude any path with /tests/
commands =
    bash -c "find auth_server -name '*.py' ! -path '*/tests/*' -print0 | xargs -0 pylint --rc-file=.pylintrc"
allowlist_externals =
    pylint
    find
    xargs
    bash

# ---
# Code formatting (tests excluded)
[testenv:format]
description = Format with black, excluding tests
deps =
    black
commands =
    black auth_server --check --diff --exclude '/auth_server/tests/|/auth_server/.venv/'
allowlist_externals =
    black

# ---
# Type checking (tests excluded)
[testenv:typecheck]
description = Type checking with mypy, excluding tests
base_python = python3.13
deps =
    -e .
    mypy
commands =
    mypy auth_server --exclude auth_server/tests
allowlist_externals =
    mypy

# ---
# Distribution build (exclude tests from the package)
[testenv:dist]
description = Build a distribution via Poetry, excluding tests
commands =
    poetry build --without tests
allowlist_externals =
    poetry
